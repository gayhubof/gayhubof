##################################################################
建议边看推文边复制代码                     #######################
很多细节在推文有详细说明，出错少，更容易理解######################
##################################################################



#cox回归用
library(survival)
#K折交叉验证用
library(caret)
#cox回归ROC曲线用
library(riskRegression)

#################################
#清理工作环境
rm(list = ls()) 
#读入数据
aa<- read.csv('交叉验证示例.csv')
#################################
#查看变量性质
str(aa)
#批量数值转因子
for (i in names(aa)[c(4:9)]){aa[,i] <- as.factor(aa[,i])}

##################################################################
#多次K折交叉验证
#设置随机种子，使数据分割可重复
set.seed(1)
#设定K和N
folds <-createMultiFolds(y=aa$status,k=5,times=1)

train <- aa[folds[[1]],]
test <- aa[-folds[[1]],]

#建模
model<-coxph(Surv(time,status)~age+n+hr+lvi+g+rt,data=train,x=T)#6

#预测
mod<- Score(list(model1=model), 
            Hist(time, status)~0, 
            data = test,
            times = 36,
            plots = 'roc',
            metrics ="auc")
mod$AUC$score$AUC
#0.8337119
plotROC(mod)

##################################################################
#循环
auc_value<-as.numeric()###建立空值
for(i in 1:10){
  train<- aa[ folds[[i]],] 
  test <- aa[-folds[[i]],] 
  model<-coxph(Surv(time,status)~age+n+hr+lvi+g+rt,data=train,x=T)
  mod<-  Score(list(model1=model),formula=Surv(time,status)~1,
               data=test,metrics="auc",times=36)
  auc_value<- append(auc_value,as.numeric(mod$AUC$score$AUC))
}
summary(auc_value)
